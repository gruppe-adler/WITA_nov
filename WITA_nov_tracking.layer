SCR_MapLocator WITA_MapLocator {
 coords 4826.089 27.471 11546.934
 userScript "	// code here"\
 "	"\
 "	override void EOnInit(IEntity owner)"\
 "	{"\
 "		if (!GetGame().InPlayMode() || !m_WorldDirections) "\
 "			return;"\
 "		// SCR_MapEntity.GetOnMapOpen().Insert(ShowMapHint);"\
 "		// SCR_MapEntity.GetOnMapClose().Insert(HideMapHint);"\
 "		"\
 "		vector mins,maxs;"\
 "		GetGame().GetWorldEntity().GetWorldBounds(mins, maxs);"\
 "		"\
 "		m_iGridSizeX = maxs[0]/3;"\
 "		m_iGridSizeY = maxs[2]/3;"\
 "		"\
 "		IEntity m_gameMode = GetGame().FindEntity(\"gameModeEnt\");"\
 "		if(!m_gameMode)"\
 "  			return;"\
 "		SCR_RespawnSystemComponent respComp = SCR_RespawnSystemComponent.Cast(m_gameMode.FindComponent(SCR_RespawnSystemComponent));"\
 "		if (!respComp)"\
 "			return;"\
 "		"\
 "		GetGame().GetCallqueue().CallLater(checkForAgentPosition, 60000, true, respComp)"\
 "		// proto void CallLater(func fn, int delay = 0, bool repeat = false, void param1 = NULL, void param2 = NULL, void param3 = NULL, void param4 = NULL, void param5 = NULL, void param6 = NULL, void param7 = NULL, void param8 = NULL, void param9 = NULL);"\
 "	}"\
 "	"\
 "	protected void checkForAgentPosition(SCR_RespawnSystemComponent respComp) {"\
 "		Print(\"checkForAgentPosition\");"\
 "		"\
 "		array<int> players = {};"\
 "		GetGame().GetPlayerManager().GetPlayers(players);"\
 "		Faction factionFIA = GetGame().GetFactionManager().GetFactionByKey(\"FIA\");"\
 "		if (!factionFIA)"\
 "			return;"\
 "		"\
 "		if ((players.Count()) < 1)"\
 "			return;"\
 "		"\
 "		foreach (int player : players)"\
 "        {    "\
 "            // Print(\"Group Member checking\");"\
 "			// Faction factionPlayer = GetGame().GetFactionManager().GetFactionByIndex(player);"\
 "			"\
 "			// not sure if necessary"\
 "			if (!player)"\
 "				return;"\
 "			"\
 "			Faction factionPlayer = respComp.GetPlayerFaction(player);"\
 "			if (!factionPlayer)"\
 "				return;"\
 "			Print(factionPlayer.GetFactionName());"\
 "			Print(factionFIA.GetFactionName());"\
 "			"\
 "			if (factionPlayer == factionFIA) {"\
 "				IEntity playerEnt = GetGame().GetPlayerManager().GetPlayerControlledEntity(player);"\
 "				CalculateClosestLocation(playerEnt);"\
 "			}"\
 "			"\
 "        }"\
 "	"\
 "	}"\
 "	"\
 "	protected void CalculateClosestLocation(IEntity player)"\
 "	{"\
 "		if (!player)"\
 "		{"\
 "			if (m_wUIHintLayout)"\
 "			{"\
 "				m_wUIHintLayout.RemoveFromHierarchy();"\
 "				m_wUIHintLayout = null;"\
 "			}"\
 "			return;"\
 "		}"\
 "		"\
 "		SCR_EditableEntityCore core = SCR_EditableEntityCore.Cast(SCR_EditableEntityCore.GetInstance(SCR_EditableEntityCore));"\
 "	       if (!core)"\
 "	           return;"\
 "		"\
 "		vector posPlayer = player.GetOrigin();"\
 "		"\
 "		Print(posPlayer);"\
 "		"\
 "		SCR_EditableEntityComponent nearest = core.FindNearestEntity(posPlayer, EEditableEntityType.COMMENT, EEditableEntityFlag.LOCAL);"\
 "		if (!nearest)"\
 "			return;"\
 "		GenericEntity nearestLocation = nearest.GetOwner();"\
 "		SCR_MapDescriptorComponent mapDescr = SCR_MapDescriptorComponent.Cast(nearestLocation.FindComponent(SCR_MapDescriptorComponent));"\
 "		string closestLocationName;"\
 "		if (!mapDescr)"\
 "			return;"\
 "		MapItem item = mapDescr.Item();"\
 "		closestLocationName = item.GetDisplayName();"\
 ""\
 "		vector lastLocationPos = nearestLocation.GetOrigin();"\
 "		float lastDistance = vector.DistanceSqXZ(lastLocationPos, posPlayer);"\
 "	"\
 "		LocalizedString closeLocationAzimuth;"\
 "		vector result = posPlayer - lastLocationPos;"\
 "		result.Normalize();"\
 "	"\
 "		float angle1 = vector.DotXZ(result,vector.Forward);"\
 "		float angle2 = vector.DotXZ(result,vector.Right);"\
 "			"\
 "		if (angle2 > 0)"\
 "		{"\
 "			if (angle1 >= angleA)"\
 "				closeLocationAzimuth = \"#AR-MapLocationHint_DirectionNorth\";"\
 "			if (angle1 < angleA && angle1 >= angleB )"\
 "				closeLocationAzimuth = \"#AR-MapLocationHint_DirectionNorthEast\";"\
 "			if (angle1 < angleB && angle1 >=-angleB)"\
 "				closeLocationAzimuth = \"#AR-MapLocationHint_DirectionEast\";"\
 "			if (angle1 < -angleB && angle1 >=-angleA)"\
 "				closeLocationAzimuth = \"#AR-MapLocationHint_DirectionSouthEast\";"\
 "			if (angle1 < -angleA)"\
 "				closeLocationAzimuth = \"#AR-MapLocationHint_DirectionSouth\";"\
 "		}"\
 "		else"\
 "		{"\
 "			if (angle1 >= angleA)"\
 "				closeLocationAzimuth = \"#AR-MapLocationHint_DirectionNorth\";"\
 "			if (angle1 < angleA && angle1 >= angleB )"\
 "				closeLocationAzimuth = \"#AR-MapLocationHint_DirectionNorthWest\";"\
 "			if (angle1 < angleB && angle1 >=-angleB)"\
 "				closeLocationAzimuth = \"#AR-MapLocationHint_DirectionWest\";"\
 "			if (angle1 < -angleB && angle1 >=-angleA)"\
 "				closeLocationAzimuth = \"#AR-MapLocationHint_DirectionSouthWest\";"\
 "			if (angle1 < -angleA)"\
 "				closeLocationAzimuth = \"#AR-MapLocationHint_DirectionSouth\";"\
 "		};"\
 "		"\
 "		int playerGridPositionX = posPlayer[0]/m_iGridSizeX;"\
 "		int playerGridPositionY = posPlayer[2]/m_iGridSizeY;"\
 "		"\
 "		int playerGridID = GetGridIndex(playerGridPositionX,playerGridPositionY);"\
 "		// m_wUIHintText.SetTextFormat(m_WorldDirections.GetPlayerPositionHint(), m_WorldDirections.GetQuadHint(playerGridID));"\
 "		// string m_gridPosition = (m_WorldDirections.GetQuadHint(playerGridID));"\
 "		if (lastDistance < 40000) {"\
 "			// m_wUIHintText2.SetTextFormat(\"TEST %1.\", closestLocationName);"\
 "			SCR_HintManagerComponent hintComponent = SCR_HintManagerComponent.GetInstance();"\
 "			hintComponent.ShowCustomHint(\"Near \" + closestLocationName, \"Agent Location\", 20);"\
 "		} else"\
 "		{"\
 "			// m_wUIHintText2.SetVisible(!closestLocationName.IsEmpty());"\
 "			// m_wUIHintText2.SetTextFormat(closeLocationAzimuth, closestLocationName);"\
 "			SCR_HintManagerComponent hintComponent = SCR_HintManagerComponent.GetInstance();"\
 "			hintComponent.ShowCustomHint(\"Near \" + closestLocationName, \"Agent Location\", 20);"\
 "		}"\
 "	}"
 m_WorldDirections SCR_MapLocationQuadHint "{5C42FEA1AE6C685A}" {
 }
}
$grp ScriptedGameTriggerEntity {
 AgentTrigger {
  coords 4826.622 27.479 11545.464
  TriggerActivationType "Every query"
  PeriodicQueries 1
  OnActivate ""\
  "		/*"\
  "		int id = GetGame().GetPlayerManager().GetPlayerIdFromControlledEntity(ent);"\
  "		Faction faction = SCR_RespawnSystemComponent.GetLocalPlayerFaction(id);"\
  "		if (faction) {"\
  "				string playerFactionKey = faction.GetFactionKey();"\
  "				private bool isFia;"\
  "				isFia = playerFactionKey == \"FIA\";"\
  "				if (isFia == 1) {"\
  "					WITA_MapLocator_Class.CalculateClosestLocation();"\
  "					GetGame().GetCallqueue().CallLater(WITA_MapLocator_Class.CalculateClosestLocation,10000,true);"\
  "				}"\
  "		}"\
  "		*/"\
  "		"\
  "	"
 }
 EndGameTrigger {
  coords 4825.547 28.289 11698.838
  userScript "	// code here"\
  "	protected bool fia_alive = true; // keep count of enemies"\
  "	protected float m_duration = 0.0;"\
  "	"\
  "	float GetDuration()"\
  "	{"\
  "		return m_duration;"\
  "	}"\
  "	"\
  "	void SetDuration(float duration)"\
  "	{"\
  "		m_duration = duration;"\
  "	}"\
  "	"\
  "	protected bool IsAlive(IEntity entity)"\
  "	{"\
  "		DamageManagerComponent damageManager = DamageManagerComponent.Cast(entity.FindComponent(DamageManagerComponent));"\
  "		if (damageManager)"\
  "			return damageManager.GetState() != EDamageState.DESTROYED;"\
  "		else"\
  "			return true;"\
  "	}"\
  " "\
  "    // Set up the filter"\
  "    override bool ScriptedEntityFilterForQuery(IEntity ent) {"\
  "        SCR_ChimeraCharacter cc = SCR_ChimeraCharacter.Cast(ent);"\
  "		"\
  "        if (!cc) return false; // If the entity is not a person, filter it out"\
  "        if (cc.GetFactionKey() != \"FIA\") return false; // If the entity does not have the Faction key of Agent, filter it out"\
  "        if (!IsAlive(cc)) return false; // If the entity is dead, filter it out"\
  "        return true; // Otherwise, include it!"\
  "    }"\
  " "\
  "    override void OnActivate(IEntity ent)"\
  "    {	"\
  "		float tempDuration = GetDuration();"\
  "		++tempDuration;"\
  "		SetDuration(tempDuration);"\
  "        // do nothing but count time"\
  "		PrintFormat(\"starting EndgameTrigger\");"\
  "    }"\
  " "\
  "    override void OnDeactivate(IEntity ent)"\
  "    {        "\
  "        // exit everything"\
  "		fia_alive = false;"\
  "		PrintFormat(\"Agent died.\");"\
  "		GetGame().GetCallqueue().CallLater(HintEnd, 10000, false);"\
  "		GetGame().GetCallqueue().CallLater(OnEmptied, 20000, false);"\
  "		"\
  "    }"\
  "	"\
  "	void HintEnd()"\
  "	{"\
  "		float elapsedTime = GetDuration();"\
  "		string m_elapsedTimeString = string.Format(\"Time elapsed: %1 min\", elapsedTime/60);"\
  "		SCR_HintManagerComponent.GetInstance().ShowCustomHint(m_elapsedTimeString, \"Hunt Duration\", 3.0); "\
  "	}"\
  " "\
  "    void OnEmptied()"\
  "    {"\
  "        SCR_BaseGameMode gameMode = SCR_BaseGameMode.Cast(GetGame().GetGameMode()); // Get the game mode for the end script"\
  "        Faction faction = GetGame().GetFactionManager().GetFactionByKey(\"US\"); // Get the winning faction Key"\
  "        int usIndex = GetGame().GetFactionManager().GetFactionIndex(faction); // Get the winning faction key's index"\
  "		"\
  "		float elapsedTime = GetDuration();"\
  "		PrintFormat(\"Endgame triggered: %1 - time elapsed: %2 min\", faction, elapsedTime/60);"\
  "		"\
  "		gameMode.EndGameMode(SCR_GameModeEndData.CreateSimple(SCR_GameModeEndData.ENDREASON_EDITOR_FACTION_VICTORY, -1, usIndex)); // End the mission!"\
  "    }"
  TriggerShapeType Sphere
  SphereRadius 10000
  TriggerActivationType "Every query"
  PeriodicQueries 1
  ClassFilter "ChimeraCharacter"
 }
}